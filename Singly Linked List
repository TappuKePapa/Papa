//Singly Linked List
#include <iostream>
using namespace std;


struct Node {
    int data;
    Node* next;
};


void createnode(Node*& head, int n) {
    Node* newNode = new Node(); 
    newNode->data = n;
    newNode->next = nullptr;
    if (head == nullptr) {
        head = newNode; 
    } else {
        Node* temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }
        temp->next = newNode; 
    }
}


void display(Node* head) {
    if (head == nullptr) {
        cout << "List is empty!" << endl;
    } else {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
}


void front(Node*& head, int n) {
    Node* newNode = new Node();
    newNode->data = n;
    newNode->next = head;
    head = newNode; 
}

void del_first(Node*& head) {
    if (head == nullptr) {
        cout << "List is empty!" << endl;
    } else {
        Node* temp = head;
        head = head->next;
        delete temp;
        cout << "First node deleted." << endl;
    }
}


int main() {
    Node* head = nullptr;

    
    createnode(head, 10);
    createnode(head, 20);
    createnode(head, 30);
    cout << "Initial List: ";
    display(head);

    front(head, 5);
    cout << "After inserting at the front: ";
    display(head);


    del_first(head);
    cout << "After deleting the first node: ";
    display(head);



    return 0;
}  ASSIGNMENT 3
